# Generated by Django 3.2.4 on 2021-06-05 10:35

import common.validators
from django.db import migrations, models
import django.utils.timezone
import user.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(max_length=30, unique=True, validators=[common.validators.username_validator], verbose_name='Username')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='Phone number')),
                ('bio', models.TextField(blank=True, max_length=100, verbose_name='Bio')),
                ('gender', models.CharField(blank=True, choices=[('N', 'None'), ('F', 'Female'), ('M', 'Male')], max_length=1, null=True, verbose_name='Gender')),
                ('birthday', models.DateField(blank=True, help_text='Please use the follow format :<em>YYYY-MM-DD</em>', null=True, verbose_name='Birthday')),
                ('website', models.CharField(blank=True, max_length=150, verbose_name='Website')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user.managers.AccountManager()),
            ],
        ),
    ]
